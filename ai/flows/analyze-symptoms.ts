// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A symptom analysis AI agent.
 *
 * - analyzeSymptoms - A function that handles the symptom analysis process.
 * - AnalyzeSymptomsInput - The input type for the analyzeSymptoms function.
 * - AnalyzeSymptomsOutput - The return type for the analyzeSymptoms function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeSymptomsInputSchema = z.object({
  symptoms: z
    .string()
    .describe('The symptoms experienced by the user, comma separated.'),
  medicalHistory: z.string().optional().describe('The user medical history.'),
});
export type AnalyzeSymptomsInput = z.infer<typeof AnalyzeSymptomsInputSchema>;

const PotentialDiagnosisSchema = z.object({
  condition: z.string().describe('A potential medical condition.'),
  confidence: z
    .number()
    .describe(
      'A number between 0 and 1 indicating the confidence level of the diagnosis.'
    ),
  rationale: z
    .string()
    .describe('The rationale behind the potential diagnosis.'),
  resourceLinks: z
    .array(z.string())
    .describe('The list of resource links for the potential diagnosis.'),
});

const AnalyzeSymptomsOutputSchema = z.object({
  diagnoses: z.array(PotentialDiagnosisSchema).describe('A list of potential diagnoses.'),
  disclaimer: z
    .string()
    .describe(
      'A disclaimer that the diagnoses are not a substitute for professional medical advice.'
    ),
});
export type AnalyzeSymptomsOutput = z.infer<typeof AnalyzeSymptomsOutputSchema>;

export async function analyzeSymptoms(input: AnalyzeSymptomsInput): Promise<AnalyzeSymptomsOutput> {
  return analyzeSymptomsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeSymptomsPrompt',
  input: {schema: AnalyzeSymptomsInputSchema},
  output: {schema: AnalyzeSymptomsOutputSchema},
  prompt: `You are an AI medical assistant that specializes in providing potential diagnoses based on user-provided symptoms and medical history.

  Analyze the following symptoms and medical history to provide a list of potential diagnoses. Include a confidence level (0-1) for each diagnosis and a rationale. Add list of resource links for each diagnosis

  Symptoms: {{{symptoms}}}
  Medical History: {{{medicalHistory}}}

  The diagnoses are not a substitute for professional medical advice. Always consult with a qualified healthcare provider for any health concerns or before making any decisions related to your health or treatment.
  `,
});

const analyzeSymptomsFlow = ai.defineFlow(
  {
    name: 'analyzeSymptomsFlow',
    inputSchema: AnalyzeSymptomsInputSchema,
    outputSchema: AnalyzeSymptomsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
